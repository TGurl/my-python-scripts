#!/usr/bin/env python

import os
import sys
import random

from time import sleep
from tui import TUI
from game import Game, Laura
from fileio import FileIO
from colors import Colors


class Main:
    def __init__(self):
        self.game = Game()
        self.colors = Colors()
        self.prompt = f"{self.colors.blue}>>{self.colors.reset} "

    def get_input(self, message=""):
        if message != "":
            self.prompt += f"{message} "
        return input(self.prompt).lower()

    def exit_game(self):
        # ---- Exit game
        os.system('clear')
        print("Bye...")

    def progressbar(self, it, prefix="", size=60, out=sys.stdout):
        count = len(it)

        def show(j):
            x = int(size*j/count)
            print(
                f"{prefix}[{u'â–ˆ'*x}{('.'*(size-x))}]",
                end='\r',
                file=out,
                flush=True)
        show(0)
        for i, item in enumerate(it):
            yield item
            show(i+1)
        print("\n", flush=True, file=out)

    def chance_of_tip(self):
        chance = random.randint(0, 100)
        return True if chance > 70 else False

    def working(self):
        if Laura.worked:
            print("You already worked today!")
            sleep(2)
            return False
        else:
            wage = 7.25
            totaltips = 0
            tipped = 0
            hours = random.randint(2, 10)
            for i in self.progressbar(range(hours), f"Working {hours}h ", 40):
                if self.chance_of_tip():
                    tipped = random.randint(10, 30)
                else:
                    tipped = 0
                totaltips += tipped
                sleep(1)
            earned = (hours * wage) + totaltips
            Laura.bank += earned
            print()
            print(f"You earned a total of ${earned} with ${totaltips} in tips!")
            sleep(2)

    def check_input(self, answer):
        if answer in ['q', 'quit']:
            return False
        elif answer in ['w', 'work']:
            self.working()
            Laura.worked = True
        elif answer in ['s', 'sleep']:
            self.goto_sleep()
        else:
            return True
        return True

    def whichday(self):
        week = ['Monday', 'Tuesday', 'Wednesday',
                'Thursday', 'Friday', 'Saturday',
                'Sunday']
        return week[Laura.daycount]

    def goto_sleep(self):
        Laura.worked = False
        Laura.day += 1
        Laura.daycount += 1
        if Laura.daycount > 6:
            Laura.daycount = 0

    def run(self):
        self.game.default_settings()
        mainloop = True
        while mainloop:
            os.system('clear')
            info = f"Day {Laura.day}  "
            info += f"{self.whichday()}  "
            info += f"Bank: ${Laura.bank:6.2f}"
            print(info)
            answer = self.get_input()
            mainloop = self.check_input(answer)

        self.exit_game()


if __name__ == "__main__":
    main = Main()
    main.run()
