#!/usr/bin/env python
import os
import faker
import random
from dataclasses import dataclass

@dataclass
class Girl:
    name: str
    age: int
    sexy: int
    cupsize: str
    bust: int
    waist: int
    hips: int
    shoesize: int
    haircolor: str
    hairstyle: str
    eyecolor: str


class CharRoll:
    def __init__(self):
        self.faker = faker.Faker()
        self.width = 79
        self.cupsizes = ['A', 'B', 'C', 'D', 'DD', 'DDD', 'E', 'F', 'G', 'H', 'K']

    def _generate_line(self):
        line = self.width * "-"
        return line

    def print_title(self, name):
        os.system('clear')
        line = self._generate_line()
        title = f"Character Sheet: {name}"

        title = (((self.width - len(title)) // 2) * " ") + title

        print(line)
        print(title)
        # print(line, end="\n\n")
        print(line)

    def choose_cupsize(self):
        return random.choice(self.cupsizes)

    def generate_name(self):
        firstname = self.faker.first_name_female()
        lastname = self.faker.last_name()
        return f"{firstname} {lastname}"

    def evaluate_sexiness(self):
        index = self.cupsizes.index(Girl.cupsize)
        return int((index / len(self.cupsizes)) * 100)

    def generate_girl(self):
        Girl.name = self.generate_name()
        Girl.cupsize = self.choose_cupsize()
        Girl.age = random.randint(18, 39)
        Girl.waist = random.randint(29, 38)
        Girl.sexy = self.evaluate_sexiness()
        Girl.bust = Girl.waist + random.randint(6, 10)
        Girl.hips = Girl.waist + random.randint(8, 12)

    def run(self):
        self.generate_girl()
        self.print_title(Girl.name)
        print(f"Age:\t\t{Girl.age}\t\tCup:\t{Girl.cupsize}")
        print(f"Sexy:\t\t{Girl.sexy}%\t\tBust:\t{Girl.bust}")
        print(f"Haircolor: \t\t\tWaist:\t{Girl.waist}")
        print(f"Hairstyle: \t\t\tHips:\t{Girl.hips}")


if __name__ == "__main__":
    app = CharRoll()
    app.run()
