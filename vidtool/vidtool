#!/usr/bin/env python

import os
import sys


class Colors:
    reset = "\033[0m"
    black = "\033[30m"
    red = "\033[31m"
    green = "\033[32m"
    yellow = "\033[33m"
    blue = "\033[34m"
    pink = "\033[35m"
    cyan = "\033[36m"
    white = "\033[37m"


class Vidtool:
    def __init__(self):
        self.colors = Colors()
        self.filename = ""
        self.output = ""
        self.segmentsize = 30
        self.files = []

    def get_input(self, msg):
        col = self.colors.blue
        res = self.colors.reset
        prompt = f"{col}>{res} {msg} : "
        return input(prompt).lower()

    def get_extension(self, filename):
        extension = filename.split(".")[1]
        return f".{extension}"

    def ask_for_input(self):
        self.filename = self.get_input("Name of the file to be converted")
        answer = self.get_input(f"Segment size ({self.segmentsize} Min)")
        self.segmentsize = 30 if answer == "" else int(answer)

    def create_segments(self):
        extension = self.get_extension(self.filename)
        cmd = "ffmpeg -y "
        cmd += f"-i {self.filename} "
        cmd += "-c copy -map 0 "
        cmd += f"-segment_size 00:{self.segmentsize}:00 "
        cmd += "-f segment -reset_timestamps 1 "
        cmd += f"output%03d{extension}"
        print(cmd)
        exit()

    def run(self, args=[]):
        if len(args) == 0:
            self.ask_for_input()
        else:
            self.filename = args[1]
            self.segmentsize = int(args[0])

        extension = self.get_extension(self.filename)
        self.output = self.filename.replace(extension, ".webm")

        self.create_segments()


if __name__ == "__main__":
    app = Vidtool()
    if len(sys.argv) == 1:
        app.run()
    else:
        app.run(sys.argv[1:])
